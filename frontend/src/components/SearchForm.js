import React, { useState, useEffect } from 'react';
import '../styles/search-form.css';
import { api } from '../services/api';
import { toast } from 'react-hot-toast';

const SearchForm = ({ onSubmit, isLoading, initialQuery, error, hasExistingResearch, existingTopic, onContinueResearch, onResetResearch }) => {
  const [query, setQuery] = useState(initialQuery || '');
  const [isInputFocused, setIsInputFocused] = useState(false);
  const [showSuggestions, setShowSuggestions] = useState(false);
  const [recentTopics, setRecentTopics] = useState([]);

  useEffect(() => {
    const savedTopics = localStorage.getItem('recentTopics');
    if (savedTopics) {
      setRecentTopics(JSON.parse(savedTopics));
    }
  }, []);

  const handleSubmit = async (e) => {
    e.preventDefault();
    if (!query.trim()) return;

    try {
      const response = await api.research.refineTopic(query, 'chatgpt');
      
      if (response && response.refined_topic) {
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–º—É –≤ –∏—Å—Ç–æ—Ä–∏—é
        const updatedTopics = [query, ...recentTopics.filter(t => t !== query)].slice(0, 5);
        setRecentTopics(updatedTopics);
        localStorage.setItem('recentTopics', JSON.stringify(updatedTopics));
        
        // –í—ã–∑—ã–≤–∞–µ–º onSubmit —Å –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–π –∏ —É—Ç–æ—á–Ω–µ–Ω–Ω–æ–π —Ç–µ–º–æ–π
        onSubmit(query, response.refined_topic);
      } else {
        toast.error('–ù–µ —É–¥–∞–ª–æ—Å—å —É—Ç–æ—á–Ω–∏—Ç—å —Ç–µ–º—É –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è');
      }
    } catch (error) {
      console.error('Error refining topic:', error);
      toast.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Ç–æ—á–Ω–µ–Ω–∏–∏ —Ç–µ–º—ã: ${error.message}`);
    }
  };

  const handleSuggestionClick = (topic) => {
    setQuery(topic);
    setShowSuggestions(false);
  };

  return (
    <div className="search-container">
      <h2>–ù–∞—á–Ω–∏—Ç–µ –≤–∞—à–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ</h2>
      <p className="search-description">
        –í–≤–µ–¥–∏—Ç–µ —Ç–µ–º—É –≤–∞—à–µ–≥–æ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è, –∏ –º—ã –ø–æ–º–æ–∂–µ–º —Å—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å —Ü–µ–ª–∏ –∏ –∑–∞–¥–∞—á–∏
      </p>
      
      <form onSubmit={handleSubmit} className="search-form">
        <div className={`input-wrapper ${isInputFocused ? 'focused' : ''}`}>
          <input
            type="text"
            value={query}
            onChange={(e) => setQuery(e.target.value)}
            onFocus={() => {
              setIsInputFocused(true);
              setShowSuggestions(true);
            }}
            onBlur={() => {
              setIsInputFocused(false);
              setTimeout(() => setShowSuggestions(false), 200);
            }}
            placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –í–ª–∏—è–Ω–∏–µ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–π –Ω–∞ –ø—Å–∏—Ö–æ–ª–æ–≥–∏—é –ø–æ–¥—Ä–æ—Å—Ç–∫–æ–≤"
            className="search-input"
            disabled={isLoading}
          />
          {query && (
            <button 
              type="button" 
              className="clear-button"
              onClick={() => setQuery('')}
            >
              √ó
            </button>
          )}
        </div>
        
        {showSuggestions && recentTopics.length > 0 && (
          <div className="recent-topics">
            <h4>–ù–µ–¥–∞–≤–Ω–∏–µ —Ç–µ–º—ã:</h4>
            <ul>
              {recentTopics.map((topic, index) => (
                <li key={index} onClick={() => handleSuggestionClick(topic)}>
                  <span className="history-icon">‚ü≤</span> {topic}
                </li>
              ))}
            </ul>
          </div>
        )}
        
        <button 
          type="submit" 
          className="start-button"
          disabled={!query.trim() || isLoading}
        >
          {isLoading ? (
            <>
              <span className="loading-spinner"></span>
              –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–µ–º—É...
            </>
          ) : (
            <>
              <span className="button-icon">üîç</span>
              –ù–∞—á–∞—Ç—å –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ
            </>
          )}
        </button>
      </form>
      
      {hasExistingResearch && (
        <div className="continue-research">
          <p>–£ –≤–∞—Å –µ—Å—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –ø–æ —Ç–µ–º–µ: <strong>{existingTopic}</strong></p>
          <button className="continue-button" onClick={onContinueResearch}>
            –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ
          </button>
          <button className="reset-button" onClick={onResetResearch}>
            –ù–∞—á–∞—Ç—å –Ω–æ–≤–æ–µ
          </button>
        </div>
      )}
      
      <div className="search-tips">
        <h4>–°–æ–≤–µ—Ç—ã –¥–ª—è –ª—É—á—à–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:</h4>
        <ul>
          <li>–§–æ—Ä–º—É–ª–∏—Ä—É–π—Ç–µ —Ç–µ–º—É –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ –∏ —á—ë—Ç–∫–æ</li>
          <li>–£–∫–∞–∑—ã–≤–∞–π—Ç–µ –æ–±–ª–∞—Å—Ç—å –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è (–ø—Å–∏—Ö–æ–ª–æ–≥–∏—è, —ç–∫–æ–Ω–æ–º–∏–∫–∞ –∏ —Ç.–¥.)</li>
          <li>–î–æ–±–∞–≤–ª—è–π—Ç–µ –∫–ª—é—á–µ–≤—ã–µ –∞—Å–ø–µ–∫—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç–∏—Ç–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å</li>
        </ul>
      </div>
    </div>
  );
};

export default SearchForm; 